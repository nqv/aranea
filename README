Aranea - Thin single-threaded HTTP server.

There are lots of web servers out there, but none of them is embedded Linux
friendly, especially uClinux, which does not have fork system call nor threads,
as well as limited stack size. Therefore, it should be small footprint and
using of malloc() is avoided where possible.

To achieve these goals, Aranea is not fully compliant with any specification :)

* Features:
- Methods: GET, HEAD, POST.
- Executing scripts (CGI) with only essential environment variables.
- Request headers: Range, If-Modified-Since, Cookie.
- Basic authentication.
- Single thread with non-blocking sockets and sendfile() call for static files.
- IPv4 and v6.

* Will be supported:
- axTLS (http://axtls.sf.net)
- Aranea library as an unblocking tcp server for embedded systems.

* Will NOT be supported:
- Directory listing (can be done using a CGI script. See www/dir.cgi).

Compile
-------
Using vfork() rather than fork() (under uClinux):
$ make VFORK=1
Enable CGI and Authentication:
$ make CGI=1 AUTH=1

For more settings, see include/aranea/config.h

Run
---
Usage: ./aranea [-d] [-r DOCUMENT_ROOT] [-p PORT] [-f AUTH_FILE]
The doc root should be an absolute path, default is current directory.
Default listening port is 8080.

Example:
$ ./aranea -r /path/to/www -p 8080

Test
----
$ printf "GET /index.html HTTP/1.0\r\n\r\n" | nc localhost 8080
